specification {
    element person {
        style {
            shape person
            color green
        }
    }
    element softwareSystem
    element container
}

model {
  user = person "Пользователь" "Пользователь социальной сети"

  socialNetwork = softwareSystem "Социальная сеть" {
    apiGateway = container "API Gateway" {
      description "Маршрутизация запросов и управление доступом"
      technology "Python, FastAPI"
    }

    userService = container "User  Service" {
      description "Управление пользователями и аутентификацией"
      technology "Python, FastAPI"
    }

    postService = container "Post Service" {
      description "Управление постами и комментариями"
      technology "Python, FastAPI"
    }

    statisticService = container "Statistic Service" {
      description "Сбор и анализ статистики (комментарии, лайки, просмотры)"
      technology "Python, FastAPI"
    }

    postgresDb = container "PostgreSQL" {
      description "Хранение данных пользователей"
      technology "User  Service Database"
      style {
        shape cylinder
      }
    }

    cassandraDb = container "Cassandra" {
      description "Хранение данных о постах и комментариях"
      technology "Post Service Database"
      style {
        shape cylinder
      }
    }

    clickhouseDb = container "ClickHouse" {
      description "Хранение аналитических данных (статистика)"
      technology "Statistic Service Database"
      style {
        shape cylinder
      }
    }

    kafka = container "Kafka" {
      description "Обмен событиями между сервисами"
      technology "Statistic Message Broker"
      style {
        shape queue
      }
    }
  }

user -> socialNetwork.apiGateway "Использует (HTTPS)"

socialNetwork.apiGateway -> socialNetwork.userService "Запрос на регистрацию/аутентификацию (JSON/HTTPS)"
socialNetwork.apiGateway -> socialNetwork.postService "Запрос на посты и комментарии (JSON/HTTPS)"
socialNetwork.apiGateway -> socialNetwork.statisticService "Запрос на статистику (JSON/HTTPS)"
socialNetwork.apiGateway -> socialNetwork.kafka "Публикация событий (лайки и просмотры) (JSON/HTTPS)"

socialNetwork.userService -> socialNetwork.postgresDb "Чтение/запись данных пользователей (SQL)"

socialNetwork.postService -> socialNetwork.cassandraDb "Чтение/запись постов и комментариев (SQL)"
socialNetwork.postService -> socialNetwork.kafka "Публикация событий (комментарии) (JSON/HTTPS)"

socialNetwork.statisticService -> socialNetwork.clickhouseDb "Чтение/запись аналитики (SQL)"
socialNetwork.statisticService -> socialNetwork.kafka "Подписка на события"
}

views {
   view index {
        include *
    }
}