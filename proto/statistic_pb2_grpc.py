# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import statistic_pb2 as proto_dot_statistic__pb2


class StatisticServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPostStats = channel.unary_unary(
                '/statistic.StatisticService/GetPostStats',
                request_serializer=proto_dot_statistic__pb2.PostStatsRequest.SerializeToString,
                response_deserializer=proto_dot_statistic__pb2.PostStatsResponse.FromString,
                )
        self.GetPostDynamic = channel.unary_unary(
                '/statistic.StatisticService/GetPostDynamic',
                request_serializer=proto_dot_statistic__pb2.PostDynamicRequest.SerializeToString,
                response_deserializer=proto_dot_statistic__pb2.PostDynamicResponse.FromString,
                )
        self.GetTopPosts = channel.unary_unary(
                '/statistic.StatisticService/GetTopPosts',
                request_serializer=proto_dot_statistic__pb2.TopPostsRequest.SerializeToString,
                response_deserializer=proto_dot_statistic__pb2.TopPostsResponse.FromString,
                )
        self.GetTopUsers = channel.unary_unary(
                '/statistic.StatisticService/GetTopUsers',
                request_serializer=proto_dot_statistic__pb2.TopUsersRequest.SerializeToString,
                response_deserializer=proto_dot_statistic__pb2.TopUsersResponse.FromString,
                )


class StatisticServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPostStats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPostDynamic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopPosts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StatisticServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPostStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPostStats,
                    request_deserializer=proto_dot_statistic__pb2.PostStatsRequest.FromString,
                    response_serializer=proto_dot_statistic__pb2.PostStatsResponse.SerializeToString,
            ),
            'GetPostDynamic': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPostDynamic,
                    request_deserializer=proto_dot_statistic__pb2.PostDynamicRequest.FromString,
                    response_serializer=proto_dot_statistic__pb2.PostDynamicResponse.SerializeToString,
            ),
            'GetTopPosts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopPosts,
                    request_deserializer=proto_dot_statistic__pb2.TopPostsRequest.FromString,
                    response_serializer=proto_dot_statistic__pb2.TopPostsResponse.SerializeToString,
            ),
            'GetTopUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopUsers,
                    request_deserializer=proto_dot_statistic__pb2.TopUsersRequest.FromString,
                    response_serializer=proto_dot_statistic__pb2.TopUsersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'statistic.StatisticService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StatisticService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPostStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/statistic.StatisticService/GetPostStats',
            proto_dot_statistic__pb2.PostStatsRequest.SerializeToString,
            proto_dot_statistic__pb2.PostStatsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPostDynamic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/statistic.StatisticService/GetPostDynamic',
            proto_dot_statistic__pb2.PostDynamicRequest.SerializeToString,
            proto_dot_statistic__pb2.PostDynamicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTopPosts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/statistic.StatisticService/GetTopPosts',
            proto_dot_statistic__pb2.TopPostsRequest.SerializeToString,
            proto_dot_statistic__pb2.TopPostsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTopUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/statistic.StatisticService/GetTopUsers',
            proto_dot_statistic__pb2.TopUsersRequest.SerializeToString,
            proto_dot_statistic__pb2.TopUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
