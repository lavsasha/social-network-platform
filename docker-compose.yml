version: '3.9'

services:
  api_gateway:
    build:
      context: .
      dockerfile: api_gateway/Dockerfile
    ports:
      - "8080:8080"
    networks:
      - social-network
    depends_on:
      - user_service
      - post_service
    environment:
      - POST_SERVICE_HOST=post_service
      - POST_SERVICE_PORT=50051
      - PYTHONPATH=/app:/app/proto

  user_service:
    build: ./user_service
    ports:
      - "5000:5000"
    networks:
      - social-network
    depends_on:
      db:
        condition: service_healthy
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://user:password@db:5432/user_db
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/health" ]
      interval: 5s
      timeout: 5s
      retries: 5

  post_service:
    build:
      context: .
      dockerfile: post_service/Dockerfile
    ports:
      - "50051:50051"
    networks:
      - social-network
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PYTHONPATH=/app:/app/proto
      - DATABASE_URL=postgresql://user:password@db:5432/post_db

  db:
    image: postgres:13
    networks:
      - social-network
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_MULTIPLE_DATABASES: user_db,post_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sh:/docker-entrypoint-initdb.d/init.sh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user" ]
      interval: 5s
      timeout: 5s
      retries: 10

  tests:
    build:
      context: .
      dockerfile: api_gateway/Dockerfile
    volumes:
      - ./api_gateway:/app/api_gateway
      - ./proto:/app/proto
      - ./user_service:/app/user_service
      - ./post_service:/app/post_service
    command: >
      sh -c "
        wait-for-it.sh user_service:5000 -t 30 &&
        wait-for-it.sh post_service:50051 -t 30 &&
        echo 'Запуск тестов tests_post...' &&
        pytest tests/test_post.py &&
        echo 'Тесты tests_post завершены. Запуск test_post_service...' &&
        chmod +x /usr/local/bin/wait-for-it.sh &&
        python -c 'from post_service.db.post_db import PostDB; db = PostDB(\"postgresql://user:password@db:5432/post_db\"); db.recreate_tables()' &&
        pytest post_service/tests/test_unit_models.py post_service/tests/test_unit_post_service.py
      "
    depends_on:
      - api_gateway
      - user_service
      - post_service
      - db
    networks:
      - social-network
    environment:
      - PYTHONPATH=/app:/app/proto:/app/post_service:/app/api_gateway
      - FLASK_ENV=testing
      - TZ=Europe/Moscow
      - POST_SERVICE_HOST=post_service
      - POST_SERVICE_PORT=50051
      - USER_SERVICE_URL=http://user_service:5000


networks:
  social-network:
    driver: bridge

volumes:
  postgres_data:
